//
// Created by perez on 17/05/2024.
//
#include "AccelHarmonic.h"
int main() {
    Matrix r(1,3);
    r(1,1) = 0.765516788149002;
    r(1,2) = 0.795199901137063;
    r(1,3) = 0.186872604554379;

    Matrix E(3,3);
    E(1,1) = -0.976675972323817;
    E(1,2) = -0.214718043847112;
    E(1,3) = -0.000454677683100580;
    E(2,1) = 0.214718082547144;
    E(2,2) = -0.976676068929910;
    E(2,3) = -3.75085925157833e-05;
    E(3,1) = -0.000436019040548382;
    E(3,2) = -0.000134261261358204;
    E(3,3) = 0.999999895930650;

    int n_max = 20;
    int m_max = 20;
    Matrix result = AccelHarmonic(r, E, n_max, m_max);

    Matrix expected(1,3);
    expected(1,1) = 6.76332555411903e+143;
    expected(1,2) = -4.16080772991263e+143;
    expected(1,3) = 2.73998077760563e+143;

    result.print();


    return 0;
}
