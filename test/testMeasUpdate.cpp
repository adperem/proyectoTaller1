//
// Created by perez on 22/05/2024.
//
#include <cmath>
#include <cassert>
#include <cstdio>
#include "MeasUpdate.h"

int main() {
    Matrix x(6, 1);
    x(1, 1) = 5738566.57769180;
    x(2, 1) = 3123975.34092958;
    x(3, 1) = 3727114.48156063;
    x(4, 1) = 5199.63329181125;
    x(5, 1) = -2474.43881044665;
    x(6, 1) = -7195.16752553892;

    Matrix G(1, 6);
    G(1, 1) = 9.59123748602946e-08;
    G(1, 2) = 2.16050345227544e-07;
    G(1, 3) = -3.27382770920699e-07;
    G(1, 4) = 0;
    G(1, 5) = 0;
    G(1, 6) = 0;


    Matrix P(6, 6);
    P(1, 1) = 101453348.207942; P(1, 2) = 120429.109483243; P(1, 3) = 148186.144985839;
    P(2, 1) = 120429.109483243; P(2, 2) = 101309543.076861; P(2, 3) = 84141.6477884862;
    P(3, 1) = 148186.144985839; P(3, 2) = 84141.6477884862; P(3, 3) = 101344434.103677;
    P(4, 1) = 39372.9209837664; P(4, 2) = 3284.34773339132; P(4, 3) = 4014.41933388835;
    P(5, 1) = 3284.21675206730; P(5, 2) = 35369.9224490354; P(5, 3) = 2255.72532482700;
    P(6, 1) = 4014.15727991752; P(6, 2) = 2255.66799464957; P(6, 3) = 36274.7873567435;
    P(1, 4) = 39372.9209837664; P(1, 5) = 3284.21675206730;  P(1, 6) = 4014.15727991752;
    P(2, 4) = 3284.34773339132; P(2, 5) = 35369.9224490354;  P(2, 6) = 2255.66799464957;
    P(3, 4) = 4014.41933388835; P(3, 5) = 2255.72532482700;  P(3, 6) = 36274.7873567435;
    P(4, 4) = 1001.21615369407; P(4, 5) = 1.32096249080649;  P(4, 6) = 1.60455481117521;
    P(5, 4) = 1.32096249080649; P(5, 5) = 999.576829597130;  P(5, 6) = 0.892927375062725;
    P(6, 4) = 1.60455481117521; P(6, 5) = 0.892927375062725; P(6, 6) = 999.924178045879;

    double z = 1.055908489493301;
    double n;
    Matrix K(6, 1);




    MeasUpdate(x, z, 1.058929953815132, 3.909537524467298e-04, G, P, 6,K);


    Matrix Kexpected(6, 1);
    Kexpected(1, 1) = 582691.206464978;
    Kexpected(2, 1) = 1312775.30841890;
    Kexpected(3, 1) = -1989454.89979415;
    Kexpected(4, 1) = 190.367307408249;
    Kexpected(5, 1) = 433.242659443716;
    Kexpected(6, 1) = -660.433799219898;

    Matrix Pexpected(6, 6);
    Pexpected(1, 1) = 95796502.3076641;   Pexpected(1, 2) = -12624173.0726357;   Pexpected(1, 3) = 19462086.3185661;
    Pexpected(2, 1) = -12624173.0726357;  Pexpected(2, 2) = 72596566.3326121;    Pexpected(2, 3) = 43597431.3213434;
    Pexpected(3, 1) = 19462086.3185661;   Pexpected(3, 2) = 43597431.3213433;    Pexpected(3, 3) = 35401902.4365655;
    Pexpected(4, 1) = 37524.8091356533;   Pexpected(4, 2) = -879.359517517920;   Pexpected(4, 3) = 10324.3398042897;
    Pexpected(5, 1) = -921.762220513670;  Pexpected(5, 2) = 25894.0537870887;    Pexpected(5, 3) = 16615.9994847826;
    Pexpected(6, 1) = 10425.7388999438;   Pexpected(6, 2) = 16700.6535123586;    Pexpected(6, 3) = 14384.0288763198;
    Pexpected(1, 4) = 37524.8091356533;   Pexpected(1, 5) = -921.762220513668;   Pexpected(1, 6) = 10425.7388999438;
    Pexpected(2, 4) = -879.359517517920;  Pexpected(2, 5) = 25894.0537870887;    Pexpected(2, 6) = 16700.6535123586;
    Pexpected(3, 4) = 10324.3398042897;   Pexpected(3, 5) = 16615.9994847826;    Pexpected(3, 6) = 14384.0288763198;
    Pexpected(4, 4) = 1000.61236892366;   Pexpected(4, 5) = -0.0531459274129234; Pexpected(4, 6) = 3.69924152635218;
    Pexpected(5, 4) = -0.0531459274129238;Pexpected(5, 5) = 996.449599435721;    Pexpected(5, 6) = 5.66006757124416;
    Pexpected(6, 4) = 3.69924152635218;   Pexpected(6, 5) = 5.66006757124416;    Pexpected(6, 6) = 992.657163954467;

    Matrix xExpected(6, 1);
    xExpected(1, 1) =5736805.99700082;
    xExpected(2, 1) =3120008.83717261;
    xExpected(3, 1) =3733125.54856025;
    xExpected(4, 1) =5199.05810378387;
    xExpected(5, 1) =-2475.74783768485;
    xExpected(6, 1) =-7193.17204837765;

    for (int i = 1; i <= 6; ++i) {
        assert(fabs(K(i, 1) - Kexpected(i, 1)) < 1e-6);
        assert(fabs(x(i, 1) - xExpected(i, 1)) < 1e-6);
        for (int j = 1; j <= 6; ++j) {
            assert(fabs(P(i, j) - Pexpected(i, j)) < 1e-6);
        }
    }
    printf("Test pasado con exito");
}